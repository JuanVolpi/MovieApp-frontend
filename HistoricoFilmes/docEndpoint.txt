API de Histórico de Filmes - Documentação dos Endpoints
======================================================

URL base: /api

Este serviço gere a relação entre os utilizadores e os filmes, controlando
o que foi visto (com reviews) e o que está na watchlist (para ver).

------------------------------------------------
1. ADICIONAR OU ATUALIZAR UMA ENTRADA DE FILME
------------------------------------------------
POST /api/entries

Descrição:
Endpoint central para criar uma nova relação entre um utilizador e um filme
(ex: adicionar à watchlist) ou para atualizar uma existente (ex: marcar um
filme da watchlist como visto e adicionar uma review).

Parâmetros (JSON):
- Para adicionar à watchlist:
  {
      "user_id": 1,
      "movie_id": 27205,
      "state": "WATCHLIST"
  }

- Para marcar como visto (com review opcional):
  {
      "user_id": 1,
      "movie_id": 27205,
      "state": "WATCHED",
      "rating": 4.5,                   (obrigatório para WATCHED)
      "watch_date": "2023-11-10",      (obrigatório para WATCHED)
      "review_text": "Filme incrível!" (opcional)
  }

Respostas:
- 201 Created: Se uma nova entrada foi criada (ex: adicionar à watchlist pela primeira vez).
- 200 OK: Se uma entrada existente foi atualizada (ex: mover da watchlist para visto).
- 400 Bad Request: Se faltarem campos obrigatórios ou o estado for inválido.
- 409 Conflict: Se tentar criar uma entrada que já existe (cenário raro com esta lógica).

------------------------------------------------
2. OBTER AS ENTRADAS DE UM UTILIZADOR
------------------------------------------------
GET /api/users/<user_id>/entries

Descrição:
Devolve uma lista de todas as relações de um utilizador com filmes.
Pode ser filtrada para devolver apenas a watchlist ou apenas os filmes vistos.

Parâmetros de URL:
- <user_id> (integer): O ID do utilizador.

Parâmetros de Query (Opcionais):
?state=<estado>

Exemplos de URL:
- Para obter tudo (vistos e watchlist): /api/users/1/entries
- Apenas a watchlist: /api/users/1/entries?state=WATCHLIST
- Apenas os vistos: /api/users/1/entries?state=WATCHED

Resposta de Sucesso (200 OK):
- Corpo: Uma lista de objetos JSON, cada um representando uma entrada.

Exemplo de Resposta para ?state=WATCHED:
[
    {
        "id": 1,
        "user_id": 1,
        "movie_id": 27205,
        "state": "WATCHED",
        "added_at": "2023-11-10T15:30:00",
        "rating": 4.5,
        "review_text": "Filme incrível!",
        "watch_date": "2023-11-10"
    }
]

Respostas de Erro:
- 400 Bad Request: Se o filtro de estado for inválido.

------------------------------------------------
3. REMOVER UMA ENTRADA DE FILME
------------------------------------------------
DELETE /api/entries

Descrição:
Remove completamente a relação entre um utilizador e um filme. Utilizado para
remover um filme da watchlist ou para apagar um registo de filme visto do diário.

Parâmetros (JSON):
{
    "user_id": 1,
    "movie_id": 27205
}

Respostas:
- 200 OK: Se a entrada foi encontrada e removida com sucesso.
- 400 Bad Request: Se faltarem os campos user_id ou movie_id.
- 404 Not Found: Se não existir nenhuma entrada para o par utilizador/filme fornecido.